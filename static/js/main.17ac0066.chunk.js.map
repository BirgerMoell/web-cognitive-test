{"version":3,"sources":["kthlogo.png","microphone.svg","Modal.js","VoiceRecorder.js","Button.js","Microphone.js","AudioForm.js","App.js","index.js"],"names":["getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","SimpleModal","props","classes","React","useState","modalStyle","body","style","className","id","type","onClick","handleClose","handleOpen","Modal","open","onClose","aria-labelledby","aria-describedby","Component","root","margin","MyButton","Button","variant","color","text","AudioForm","diagnosis","setDiagnosis","cognition","setCognition","answered","setAnswered","userMedia","useRef","playAudio","stream","console","log","src","logo","alt","ref","recorded","autoPlay","for","onChange","event","target","value","name","phrases","Header","AudioText","counter","setCounter","completed","setCompleted","useEffect","interval","setInterval","length","stopMicrophone","clearInterval","header","App","setOpen","audio","setAudio","setRecorded","setStartTime","toggleMicrophone","getMicrophone","getTracks","forEach","track","stop","a","navigator","mediaDevices","getUserMedia","video","Fragment","Date","now","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17ac0066.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/kthlogo.b07cd2db.png\";","export default __webpack_public_path__ + \"static/media/microphone.fea0009f.svg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50\n  const left = 50\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 600,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function SimpleModal(props) {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n \n\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <h2 id=\"simple-modal-title\">Forskningsprojekt om röst och kognition</h2>\n      <p id=\"simple-modal-description\">\n      Studien bedrivs vid Tal Musik Hörsel på KTH\n      med målsättning att förbättra diagnostik vid Alzheimer.\n      </p>\n      <p id=\"simple-modal-description\">\n      Studien riktar sig främst till dig som har fått en diagnos relaterad till kognitiv nedsättning\n      som MCI eller Alzheimers sjukdom.\n      </p>\n      <p id=\"simple-modal-description\">\n      Genom att vara med i studien godkänner du att din röst sparas och lagras på\n      servrar tillhörande Kungliga Tekniska Högskolans enhet för Tal Musik Hörsel.\n      </p>\n      <p id=\"simple-modal-description\">\n      Ansvarig forskare för studien är Professor Jonas Beskow (beskow@kth.se) och Birger Moëll (bmoell@kth.se).\n      </p>\n\n      <button type=\"button\" onClick={props.handleClose}>\n        Jag godkänner att min röst används i en forskningsstudie\n      </button>\n      \n      <button type=\"button\" onClick={props.handleOpen}>\n        Jag vill inte medverka i studien.\n      </button>\n      <SimpleModal />\n    </div>\n  );\n\n  return (\n    <div>\n      \n      <Modal\n        open={props.open}\n        onClose={props.handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Recorder } from 'react-voice-recorder'\nimport 'react-voice-recorder/dist/index.css'\n\nexport default class AudioRecorder extends React.Component {\n\n    state = {\n        audioDetails: {\n            url: null,\n            blob: null,\n            chunks: null,\n            duration: {\n                h: 0,\n                m: 0,\n                s: 0\n            }\n        }\n    }\n\n    handleAudioStop(data) {\n        console.log(data)\n        this.setState({ audioDetails: data });\n    }\n    handleAudioUpload(file) {\n        console.log(file);\n    }\n    handleRest() {\n        const reset = {\n            url: null,\n            blob: null,\n            chunks: null,\n            duration: {\n                h: 0,\n                m: 0,\n                s: 0\n            }\n        };\n        this.setState({ audioDetails: reset });\n    }\n\n    render() {\n        return <Recorder\n            record={true}\n            title={\"New recording\"}\n            audioURL={this.state.audioDetails.url}\n            showUIAudio\n            handleAudioStop={data => this.handleAudioStop(data)}\n            handleAudioUpload={data => this.handleAudioUpload(data)}\n            handleRest={() => this.handleRest()}\n        />\n    }\n}\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function MyButton(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Button onClick={props.onClick} variant=\"contained\" color=\"primary\">\n        {props.text}\n      </Button>\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from './Button';\n\nexport default class Microphone extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      audio: null\n    };\n    this.toggleMicrophone = this.toggleMicrophone.bind(this);\n  }\n\n    async getMicrophone() {\n    const audio = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: false\n    });\n    this.setState({ audio });\n  }\n\n    stopMicrophone() {\n    this.state.audio.getTracks().forEach(track => track.stop());\n    this.setState({ audio: null });\n  }\n\n  toggleMicrophone() {\n    if (this.state.audio) {\n      this.stopMicrophone();\n      console.log(\"the audio is\", this.state.audio)\n    } else {\n      this.getMicrophone();\n    }\n  }\n\n//   playAudio(stream) {\n//     audioSourceNode = audioContext.createMediaStreamSource(stream);\n//   }\n\n  render() {\n    return (\n      <div className=\"Microphone\">\n        <main>\n          <div className=\"controls\">\n\n    \n          <Button onClick={this.toggleMicrophone} text={this.state.audio ? 'Stop Recording' : 'Start Recording'}/>\n\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\n","import React, { Fragment, useEffect, useRef } from 'react';\nimport logo from './kthlogo.png'\nimport Button from './Button';\n\nexport function AudioForm(props) {\n\n    const [diagnosis, setDiagnosis] = React.useState('');\n    const [cognition, setCognition] = React.useState('');\n    const [answered, setAnswered] = React.useState(false);\n    const userMedia = useRef(null);\n\n    const sendAnswersToServer = () => {\n        console.log(\"diagnosis\", diagnosis)\n        console.log(\"cognition\", cognition)\n        console.log(\"recorded is\", props.recorded)\n        setAnswered(true)\n        playAudio(props.recorded)\n    }\n\n    const playAudio = (stream) => {\n        console.log(\"usermedia is\", userMedia)\n        // userMedia.current.src = stream\n        // userMedia.current.focus()\n        // userMedia.current.play();\n    }\n\n    return (\n        answered ? <div className=\"AudioForm-container\">\n            <p>Tack för att du var med i vår undersökning. Tipsa gärna flera att vara med i vår studie.</p>\n\n            <img src={logo} width=\"150px\" alt=\"logo\" />\n\n            <p>Hör av dig till bmoell@kth.se om du har några frågor kring studien.</p>\n            <audio ref={userMedia} src={props.recorded} autoPlay id=\"user-media\"></audio>\n\n        </div> :\n\n            <div className=\"AudioForm-container\">\n\n                <label for=\"diagnos\">Har du en diagnos av en kognitiv nedsättning</label>\n                <br></br>\n                <select onChange={(event) => setDiagnosis(event.target.value)} name=\"diagnos\" id=\"diagnos\">\n                    <option value=\"0\">Ingen diagnos</option>\n                    <option value=\"1\">MCI</option>\n                    <option value=\"2\">Alzheimer</option>\n                </select>\n\n                <hr></hr>\n\n                <label for=\"cognition\">Anser du själv att du har kognitiva svårigheter</label>\n                <select onChange={(event) => setCognition(event.target.value)} name=\"diagnos\" id=\"diagnos\">\n                    <option value=\"0\">Inga kognitiva svårigheter</option>\n                    <option value=\"1\">Vissa kognitiva svårigherer</option>\n                    <option value=\"2\">Allvarliga kognitiva svårigheter</option>\n                    <option value=\"2\">Mycket Allvarliga kognitiva svårigheter</option>\n                </select>\n\n                <hr></hr>\n\n                {/* <div>Ange en mail-adress (frivilligt) om du vill bli kontaktad för en uppföljning</div>\n       */}\n\n                <Button onClick={sendAnswersToServer} text={\"Skicka in dina svar\"} />\n\n\n            </div>\n\n\n\n    )\n\n}\n","import React, { Fragment, useEffect } from 'react';\nimport microphone from './microphone.svg';\nimport logo from './kthlogo.png'\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport Modal from './Modal';\nimport VoiceRecorder from './VoiceRecorder';\nimport Microphone from './Microphone'\nimport { AudioForm } from './AudioForm'\n \nlet phrases = [{\n  \"header\": \"Läs meningen exakt som den sägs\",\n  \"text\": \"Katten gömde sig alltid under soffan när det var hundar i rummet\"\n}, {\n  \"header\": \"Läs meningen exakt som den sägs\",\n  \"text\": \"Jag vet att det är Johan som ska få hjälp idag\"\n},{\n  \"header\": \"Säg så många ord som du kan som börjar på F\",\n  \"text\": \"\"\n}\n]\n\nfunction Header() {\n  return (\n\n    <div className=\"Logo-header\">\n      <img src={logo} width=\"100px\" alt=\"logo\" />\n    </div>\n\n  )\n}\n\nfunction IntroText() {\n  return (\n    <Fragment>  <h3>\n      Ge oss din röst\n</h3>\n\n      <p>Var del i vårt forskningsprojekt om röst och kognition.<hr />\nStudien bedrivs vid Tal Musik Hörsel på KTH <br />med målsättning är förbättra diagnostik vid Alzheimer\n\n</p>\n    </Fragment>)\n}\n\nfunction AudioText(props) {\n\n  const [counter, setCounter] = React.useState(0)\n  const [phrase, setPhrase] = React.useState({\n    \"header\": \"Läs meningen exakt som den sägs\",\n    \"text\": \"Katten gömde sig alltid under soffan när det var hundar i rummet\"\n  })\n  const [completed, setCompleted] = React.useState(false)\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    if (!completed) {\n    const interval = setInterval(() => {\n      console.log(\"counter is\", counter)\n      console.log(\"completed is\", completed)\n      if (counter >= props.phrases.length -1) {\n        console.log(\"INSIDE COMPLETED\")\n        setCompleted(true)\n        props.stopMicrophone()\n      } else {\n        setCounter(counter + 1)\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n    }\n  }, [counter, completed]);\n\n  return (\n\n    completed ?\n      <AudioForm recorded={props.recorded}/>\n     : \n      <Fragment>\n        <h3>\n          {props.phrases && props.phrases[counter].header}\n        </h3>\n        <p> {props.phrases[counter].text}\n        </p>  \n        </Fragment>\n  )\n}\n\nfunction App() {\n\n  const startRecording = () => {\n    alert(\"Recording the voice\")\n  }\n\n  const [open, setOpen] = React.useState(true);\n  const [audio, setAudio] = React.useState(false);\n  const [recorded, setRecorded] = React.useState(false);\n  const [startTime, setStartTime] = React.useState(0);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setStartTime(new Date(Date.now()))\n    toggleMicrophone()\n  };\n\n  const toggleMicrophone = () => {\n    console.log(\"toggling the microphone\")\n    if (audio) {\n      stopMicrophone();\n    } else {\n      getMicrophone();\n    }\n  }\n\n  const stopMicrophone =() => {\n    audio.getTracks().forEach(track => track.stop());\n    setRecorded(audio)\n    setAudio(null)\n  }\n\n  const getMicrophone = async () => {\n    const audio = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: false\n    });\n    setAudio(audio)\n  }\n\n  return (\n    <React.Fragment>\n\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Header />\n\n          {!open && <AudioText recorded={recorded} stopMicrophone={stopMicrophone} phrases={phrases} />}\n\n          {/* <Microphone /> */}\n          \n\n        </header>\n\n      </div>\n\n      <Modal open={open} handleClose={handleClose} handleOpen={handleOpen} />\n\n    </React.Fragment>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}